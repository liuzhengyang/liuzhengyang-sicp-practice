#lang racket
(provide prime?)

(define (square n)
  (* n n)
  )
(define (next-divider n)
  (if (= n 2) 3
      (+ n 2)
      )
  )
(define (min-divider n)
  (define (divide-iter i)
    (cond ((> (square i) n) n)
      ((= (remainder n i) 0) i)
      (else (divide-iter (next-divider i)))
      )
    )
  (divide-iter 2)
  )
      
(define (prime? n)
  (= (min-divider n) n)
  )
(define (a) (current-inexact-milliseconds)
  )
(define b (a))