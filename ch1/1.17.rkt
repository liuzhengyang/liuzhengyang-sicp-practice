#lang racket
(define (fast-multi a b)
  (define (even? n)
    (= (remainder n 2) 0)
    )
  (define (double n)
    (* 2 n)
    )
  (define (half n)
    (/ n 2)
    )
  (cond
    ((= b 0) 0)
    ((odd? b) (fast-multi (double a) (half b)))
      (else (+ a (fast-multi a (- b 1))))
      )
  )
(fast-multi 7 9)
(fast-multi 79 8)